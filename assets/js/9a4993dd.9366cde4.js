"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[16156],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>h});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function m(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),c=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):m(m({},r),e)),t},s=function(e){var r=c(e.components);return n.createElement(i.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),g=c(t),h=a,u=g["".concat(i,".").concat(h)]||g[h]||l[h]||o;return t?n.createElement(u,m(m({ref:r},s),{},{components:t})):n.createElement(u,m({ref:r},s))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,m=new Array(o);m[0]=g;var p={};for(var i in r)hasOwnProperty.call(r,i)&&(p[i]=r[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,m[1]=p;for(var c=2;c<o;c++)m[c]=t[c];return n.createElement.apply(null,m)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},53730:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>m,default:()=>l,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=t(87462),a=(t(67294),t(3905));const o={id:"overview",title:"Drivers overview",sidebar_label:"Drivers overview",slug:"/connect-to-memgraph/drivers"},m=void 0,p={unversionedId:"connect-to-memgraph/drivers/overview",id:"connect-to-memgraph/drivers/overview",title:"Drivers overview",description:"Memgraph supports the following languages:",source:"@site/docs/connect-to-memgraph/drivers/overview.md",sourceDirName:"connect-to-memgraph/drivers",slug:"/connect-to-memgraph/drivers",permalink:"/memgraph-docs/memgraph/next/connect-to-memgraph/drivers",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/docs/connect-to-memgraph/drivers/overview.md",tags:[],version:"current",frontMatter:{id:"overview",title:"Drivers overview",sidebar_label:"Drivers overview",slug:"/connect-to-memgraph/drivers"},sidebar:"memgraph",previous:{title:"mgconsole",permalink:"/memgraph-docs/memgraph/next/connect-to-memgraph/mgconsole"},next:{title:"C#",permalink:"/memgraph-docs/memgraph/next/connect-to-memgraph/drivers/c-sharp"}},i={},c=[],s={toc:c};function l(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Memgraph supports the following languages: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph-docs/memgraph/next/connect-to-memgraph/drivers/c-sharp"},"C#"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/mgclient"},"C/C++"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph-docs/memgraph/next/connect-to-memgraph/drivers/go"},"Go"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/zmactep/hasbolt"},"Haskell"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph-docs/memgraph/next/connect-to-memgraph/drivers/java"},"Java"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph-docs/memgraph/next/connect-to-memgraph/drivers/javascript"},"JavaScript"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph-docs/memgraph/next/connect-to-memgraph/drivers/nodejs"},"Node.js"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph-docs/memgraph/next/connect-to-memgraph/drivers/php"},"PHP"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph-docs/memgraph/next/connect-to-memgraph/drivers/python"},"Python"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/neo4jrb/neo4j"},"Ruby"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph-docs/memgraph/next/connect-to-memgraph/drivers/rust"},"Rust")))),(0,a.kt)("p",null,"To query Memgraph programmatically use the ",(0,a.kt)("a",{parentName:"p",href:"https://7687.org/"},"Bolt protocol"),".\nThe Bolt protocol was designed for efficient communication with graph databases\nand ",(0,a.kt)("strong",{parentName:"p"},"Memgraph supports versions 1 and 4")," of the protocol."))}l.isMDXComponent=!0}}]);